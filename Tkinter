from tkinter import *
import json


class Inicial_menu:
    def __init__(self, master):

        menu_inicial = Frame(master)
        menu_inicial.pack()

        self.sair = Button(   # cria o botao de sair
            menu_inicial, text="          Sair          ", fg="red", command=self.save_exit
            )
        self.sair.pack(side=BOTTOM)

        self.choose = Button(menu_inicial, text="  Escolher Loja  ", command=self.choose)  # cria o botao de escolher loja
        self.choose.pack(side=TOP)

        self.add_loja = Button(menu_inicial, text=" Adicionar Loja ", command=self.add_store)  # cria o botao de add loja
        self.add_loja.pack(side=TOP)
        
        self.del_loja = Button(menu_inicial, text="   Deletar Loja   ", command=self.del_store)
        self.del_loja.pack(side=TOP)  #cria o botao de deletar loja
        
    def save_exit(self):
#        original = json.dumps(estoque, sort_keys = True, indent = 4)
#        with open('estoque.json','w') as est:
#            est.write(original)
        menu_inicial = 0
    
    def add_store(self): # função de adicionar loja
        menu_inicial = 2
        #call new class
    
    def choose(self): #função de escolher loja e ir para os estoques
        menu_inicial = 1

    
    def del_store(self): # função de deletar loja
        menu_inicial = 3
        
        
        
class Store_menu:
    def __init__(self,master):
        
        menu_lojas = Frame(master)
        menu_lojas.pack()
        
        self.sair = Button(   # cria o botao de sair
            menu_lojas, text="             Sair             ", fg="red", command=self.save_exit
            )
        self.sair.pack(side=BOTTOM)
        
        
        self.add_prod = Button(menu_lojas, text='Adicionar Produto', command=self.add_prod
            )
        self.add_prod.pack(side=TOP)
        
        
        self.alt_prod = Button(menu_lojas, text='Alterar Produto', command=self.alt_prod
            )
        self.alt_prod.pack(side=TOP)
        
        
        self.del_prod = Button(menu_lojas, text='Deletar Produto', command=self.del_prod
            )
        self.del_prod.pack(side=TOP)
        
        
        self.relatorio = Button(menu_lojas, text='Relatórios', command=self.relatorio
            )
        self.relatorio.pack(side=TOP)
    
    def save_exit(self):
        menu_lojas = 0
    
    def add_prod(self):
        menu_lojas = 1
    
    def alt_prod(self):
        menu_lojas = 2
    
    def del_prod(self):
        menu_lojas = 3
    
    def relatorio(self):
        menu_lojas = 4
    

class Alterar:
    def __init__(self, master):
        
        alterar = Frame(master)
        alterar.pack()
        
        self.voltar = Button(alterar, text='Voltar', command=self.voltar
            )
        self.voltar.pack(side=BOTTOM)
        
        
        self.add_prod = Button(alterar, text='Alterar Quantidade', command=self.add_prod
            )
        self.add_prod.pack(side=TOP)
        
        
        self.change_price = Button(alterar, text='Alterar Preço', command=self.change_price
            )
        self.change_price.pack(side=TOP)
        
        
    def voltar(self):
        menu_3 = 0
    
    def add_prod(self):
        menu_3 = 1
    
    def change_price(self):
        menu_3 = 2
    
class Relatorios:
    def __init__(self, master):
        
        relatorio = Frame(master)
        relatorio.pack()
        
        self.voltar = Button(relatorio, text='Voltar', command=self.voltar
            )
        self.voltar.pack(side=BOTTOM)
        
        
        self.est = Button(relatorio, text='Imprimir Estoque', command=self.estoque
            )
        self.est.pack(side=TOP)
        
        
        self.negativo = Button(relatorio, text='Negativo no Estoque', command=self.negativo
            )
        self.negativo.pack(side=TOP)
        
        
        self.money = Button(relatorio, text='Total em Estoque', command=self.money
            )
        self.money.pack(side=TOP)
        
    def voltar(self):
        menu_4 = 0
    
    def estoque(self):
        menu_4 = 1
    
    def negativo(self):
        menu_4 = 2
    
    def money(self):
        menu_4 = 3



#root = Tk()
#
#app = Inicial_menu(root)
#
#root.mainloop()
#
#
#root = Tk()
#
#app = Store_menu(root)
#
#root.mainloop()
#
#
#root = Tk()
#
#app = Alterar(root)
#
#root.mainloop()
#
#
#root = Tk()
#
#app = Relatorios(root)
#
#root.mainloop()
